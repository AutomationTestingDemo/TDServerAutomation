<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="0" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-02-17T15:22:15 IST" name="SanityChallengeflow" finished-at="2020-02-17T15:22:21 IST" duration-ms="5653">
    <groups>
    </groups>
    <test started-at="2020-02-17T15:22:15 IST" name="AMEX::Clear Card::Browser::AReq flow" finished-at="2020-02-17T15:22:20 IST" duration-ms="5040">
      <class name="com.ca.tds.main.TDSPreAreq_TC">
        <test-method is-config="true" signature="beforeTestClass()[pri:0, instance:com.ca.tds.main.TDSPreAreq_TC@13b13b5d]" started-at="2020-02-17T15:22:15 IST" name="beforeTestClass" finished-at="2020-02-17T15:22:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestClass -->
        <test-method is-config="true" signature="BeforeClass()[pri:0, instance:com.ca.tds.main.TDSPreAreq_TC@13b13b5d]" started-at="2020-02-17T15:22:15 IST" name="BeforeClass" finished-at="2020-02-17T15:22:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method signature="testArequestAPI(org.testng.ITestContext, java.util.Map)[pri:0, instance:com.ca.tds.main.TDSPreAreq_TC@13b13b5d]" started-at="2020-02-17T15:22:16 IST" name="testArequestAPI" data-provider="DataProvider3dsTestData" finished-at="2020-02-17T15:22:20 IST" duration-ms="4367" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@24d7dc5c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{TestCaseID=_S001, TestCaseName=_SanityChallenge_AReq_AMEX_For_Verify_TC001, SanityFlag=Y, Test Case type=P, RequirementID=, FieldName=, Expected-cardholderInfo=NA, Expected-creq=G, Expected-transStatusReason=NA, Expected-authenticationValue=NA, Expected-authenticationType=G, Expected-acsURL=G, Expected-acsOperatorID=ACS_OPERATOR_ID, Expected-acsChallengeMandated=G, Expected-callerTxnRefID=G, Expected-threeDSServerTransID=G, Expected-dsTransID=G, Expected-acsTransID=G, Expected-eci=NA, Expected-messageType=ARes, Expected-dsName=amex, Expected-messageVersion=2.1.0, Expected-dsReferenceNumber=DsReferenceNumber, Expected-acsReferenceNumber=ABCDEF987654321, Expected-transStatus=C, Expected-errorCode=NA, Expected-errorComponent=NA, Expected-errorDescription=NA, Expected-errorDetail=NA, #browserJavascriptEnabled#=true, #challengeWindowSize#=04, #callerTxnRefID#=341b7153-da86-4543-860f-2ba47f0168a5, #caMerchantID#=MTD000000, #acctID#=ACCTID98X3fw3, #chAccAgeInd#=02, #chAccChange#=20180928, #chAccChangeInd#=02, #chAccDate#=20180928, #chAccPwChange#=20180901, #chAccPwChangeInd#=01, #nbPurchaseAccount#=8, #paymentAccAge#=20180808, #paymentAccInd#=01, #provisionAttemptsDay#=1, #shipAddressUsage#=20180910, #shipAddressUsageInd#=03, #shipNameIndicator#=01, #suspiciousAccActivity#=01, #txnActivityDay#=5, #txnActivityYear#=8, #acctNumber#=4Abuomi9LgxCa7vPYSbXHlv9jX754ALLUd7WxKwnrLZln1vr0ZVO/ahzu6fQh6YLuA3+1M4JoV4oFRd5cPK2lml3yytggURxMETgAx3fb8CMT/YXCYDSzZ+m1ghc+3FtmSFENHIKm3cAoIJBNOGC0VpXdEr5p/3XBdYsXlaODLnQdIZtNAdWIE0ihy6VIcwAlJox+tarG37G0WbEM9lZZcIBH9cXs7IXayzAA5RpynHPOkrs5H5JZ2aIt5B1OuBe1fVcylt66j9OSfQ2apT9bbr0NFgME+Hsn490Z7RhvcGiM7khgaaNkw756VP/1CjKYsTzzhZIt0g31B6vvYdNaw==, #acctType#=01, #addrMatch#=Y, #billAddrCity#=San Jose, #billAddrCountry#=840, #billAddrLine1#=500 West Maude Ave, #billAddrLine2#=ABC, #billAddrLine3#=HMS, #billAddrPostCode#=95101, #billAddrState#=CA, #browserAcceptHeader#=text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8, #browserColorDepth#=24, #browserIP#=155.35.122.4, #browserJavaEnabled#=true, #browserLanguage#=en-US, #browserScreenHeight#=720, #browserScreenWidth#=1280, #browserTZ#=-330, #browserUserAgent#=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36, #cardExpiryDate#=2008, #cardholderName#=Stephen, #deviceChannel#=02, #email#=harsh08@ca.com, #hcc#=1, #hsubscriber#=1234567899, #messageCategory#=01, #messageType#=AReq, #messageVersion#=2.1.0, #mcc#=1, #msubscriber#=1234567899, #notificationURL#=http://localhost:9090/golfstore2/CreqNotification.jsp, #purchaseAmount#=35000, #purchaseCurrency#=840, #purchaseDate#=20180928160450, #purchaseExponent#=2, #recurringExpiry#=#REMOVE#, #recurringFrequency#=#REMOVE#, #shipAddrCity#=San Jose, #shipAddrCountry#=840, #shipAddrLine1#=500 West Maude Ave, #shipAddrLine2#=ABC, #shipAddrLine3#=HMS, #shipAddrPostCode#=95101, #shipAddrState#=CA, #threeDSCompInd#=Y, #threeDSServerTransID#=, #wcc#=1, #wsubscriber#=1234567899, #threeDSRequestorAuthenticationInd#=01, #threeDSReqAuthData#=3DS PA Request, #threeDSReqAuthMethod#=02, #threeDSReqAuthTimestamp#=201809281603, #threeDSRequestorChallengeInd#=01, #threeDSRequestorID#=611, #threeDSRequestorName#=ew0KCSJEViI6ICIxLjAiLA0KCSJERCI6Iaa45, #threeDSReqPriorAuthData#=three DS Request Prior Authentication Data, #threeDSReqPriorAuthMethod#=01, #threeDSReqPriorAuthTimestamp#=201810010323, #threeDSReqPriorRef#=4c6453da-4c56-4980-98cd-d04a064899c4, #threeDSRequestorURL#=http://10.131.94.242:1080/content-server/api/tds2/txn/browser/v1/tds-method, #threeDSServerRefNumber#=AAAAAA123456789, #threeDSServerOperatorID#=serverOperatorID, #threeDSServerURL#=http://10.138.158.51:9608, #acquirerBIN#=123456, #acquirerMerchantID#=AcquirerMerchantID222, #payTokenInd#=true, #purchaseInstalData#=#REMOVE#, #mcc1#=0742, #merchantCountryCode#=840, #merchantName#=global, #deliveryEmailAddress#=harsh08@ca.com, #deliveryTimeframe#=01, #giftCardAmount#=500, #giftCardCount#=02, #giftCardCurr#=840, #preOrderDate#=20200803, #preOrderPurchaseInd#=01, #reorderItemsInd#=01, #shipIndicator#=01, #criticalityIndicator#=false, #id#=ID2018SEP282001, #name#=ShashishekharHM, #transType#=01, #threeDSRequestorAuthenticationInfo#=, #threeDSRequestorPriorAuthenticationInfo#=, #broadInfo#=, #broadInfoValue#=broadInfoValue, #acctInfo#=, #homePhone#=, #mobilePhone#=, #workPhone#=, #merchantRiskIndicator#=, #messageExtension#=, #Dvalue#=HMS, #Dvalue1#=HMS, #Dvalue2#=HMS}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Browser Flow:: Json Validation Failed.A JSONObject text must begin with '{' at 1 [character 2 line 1]<br> api response : null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Browser Flow:: Json Validation Failed.A JSONObject text must begin with '{' at 1 [character 2 line 1]<br> api response : null
at org.testng.Assert.fail(Assert.java:97)
at com.ca.tds.main.TDSPreAreq_TC.testArequestAPI(TDSPreAreq_TC.java:137)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArequestAPI -->
        <test-method is-config="true" signature="afterMethodProcessing(org.testng.ITestResult)[pri:0, instance:com.ca.tds.main.TDSPreAreq_TC@13b13b5d]" started-at="2020-02-17T15:22:20 IST" name="afterMethodProcessing" finished-at="2020-02-17T15:22:20 IST" duration-ms="323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testArequestAPI status=FAILURE method=TDSPreAreq_TC.testArequestAPI(org.testng.ITestContext, java.util.Map)[pri:0, instance:com.ca.tds.main.TDSPreAreq_TC@13b13b5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodProcessing -->
        <test-method is-config="true" signature="AfterClass()[pri:0, instance:com.ca.tds.main.TDSPreAreq_TC@13b13b5d]" started-at="2020-02-17T15:22:20 IST" name="AfterClass" finished-at="2020-02-17T15:22:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method is-config="true" signature="AfterTestClass()[pri:0, instance:com.ca.tds.main.TDSPreAreq_TC@13b13b5d]" started-at="2020-02-17T15:22:20 IST" name="AfterTestClass" finished-at="2020-02-17T15:22:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestClass -->
      </class> <!-- com.ca.tds.main.TDSPreAreq_TC -->
    </test> <!-- AMEX::Clear Card::Browser::AReq flow -->
    <test started-at="2020-02-17T15:22:20 IST" name="AMEX::Clear Card::Browser::RReq flow" finished-at="2020-02-17T15:22:21 IST" duration-ms="279">
      <class name="com.ca.tds.main.TDSRReq_TC">
        <test-method is-config="true" signature="beforeTestClass()[pri:0, instance:com.ca.tds.main.TDSRReq_TC@378542de]" started-at="2020-02-17T15:22:20 IST" name="beforeTestClass" finished-at="2020-02-17T15:22:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestClass -->
        <test-method is-config="true" signature="BeforeClass()[pri:0, instance:com.ca.tds.main.TDSRReq_TC@378542de]" started-at="2020-02-17T15:22:20 IST" name="BeforeClass" finished-at="2020-02-17T15:22:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method signature="testRRequestAPI(org.testng.ITestContext, java.util.Map)[pri:0, instance:com.ca.tds.main.TDSRReq_TC@378542de]" started-at="2020-02-17T15:22:21 IST" name="testRRequestAPI" data-provider="DataProvider3dsTestData" finished-at="2020-02-17T15:22:21 IST" duration-ms="6" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4e18273d]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{TestCaseID=_S001, TestCaseName=_SanityChallenge_RReq_For_Verify_TC001, SanityFlag=Y, Test Case type=P, RequirementID=, FieldName=, Expected-threeDSServerTransID=G, Expected-dsTransID=G, Expected-acsTransID=G, Expected-messageExtension=G, Expected-messageType=RRes, Expected-messageVersion=2.1.0, Expected-resultsStatus=G, Expected-errorCode=NA, Expected-errorComponent=NA, Expected-errorDescription=NA, Expected-errorDetail=NA, #acsTransID#=, #authenticationType#=, #challengeCancel#=#REMOVE#, #dsTransID#=, #eci#=#REMOVE#, #interactionCounter#=01, #messageCategory#=01, #messageType#=RReq, #messageVersion#=, #threeDSServerTransID#=, #transStatus#=Y, #transStatusReason#=#REMOVE#, #criticalityIndicator#=false, #Dvalue#=HMS, #Dvalue1#=HMS, #Dvalue2#=HMS, #id#=ID2019JAN240101, #name#=ShashishekharHM, #authenticationValue#=AJkCCBFHJhl3gGhDA0cmAAAAAAA=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.fail(Assert.java:102)
at com.ca.tds.main.TDSRReq_TC.testRRequestAPI(TDSRReq_TC.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRRequestAPI -->
        <test-method is-config="true" signature="afterMethodProcessing(org.testng.ITestResult)[pri:0, instance:com.ca.tds.main.TDSRReq_TC@378542de]" started-at="2020-02-17T15:22:21 IST" name="afterMethodProcessing" finished-at="2020-02-17T15:22:21 IST" duration-ms="57" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRRequestAPI status=FAILURE method=TDSRReq_TC.testRRequestAPI(org.testng.ITestContext, java.util.Map)[pri:0, instance:com.ca.tds.main.TDSRReq_TC@378542de] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodProcessing -->
        <test-method is-config="true" signature="AfterClass()[pri:0, instance:com.ca.tds.main.TDSRReq_TC@378542de]" started-at="2020-02-17T15:22:21 IST" name="AfterClass" finished-at="2020-02-17T15:22:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method is-config="true" signature="AfterTestClass()[pri:0, instance:com.ca.tds.main.TDSRReq_TC@378542de]" started-at="2020-02-17T15:22:21 IST" name="AfterTestClass" finished-at="2020-02-17T15:22:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestClass -->
      </class> <!-- com.ca.tds.main.TDSRReq_TC -->
    </test> <!-- AMEX::Clear Card::Browser::RReq flow -->
    <test started-at="2020-02-17T15:22:21 IST" name="AMEX::Clear Card::Browser::VerifyAPI flow" finished-at="2020-02-17T15:22:21 IST" duration-ms="204">
      <class name="com.ca.tds.main.TDSVerifyAPI_TC">
        <test-method is-config="true" signature="beforeSuite(org.testng.ITestContext)[pri:0, instance:com.ca.tds.main.TDSVerifyAPI_TC@72cde7cc]" started-at="2020-02-17T15:22:13 IST" name="beforeSuite" finished-at="2020-02-17T15:22:15 IST" duration-ms="2002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@77f263bb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTestClass()[pri:0, instance:com.ca.tds.main.TDSVerifyAPI_TC@72cde7cc]" started-at="2020-02-17T15:22:21 IST" name="beforeTestClass" finished-at="2020-02-17T15:22:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestClass -->
        <test-method is-config="true" signature="BeforeClass()[pri:0, instance:com.ca.tds.main.TDSVerifyAPI_TC@72cde7cc]" started-at="2020-02-17T15:22:21 IST" name="BeforeClass" finished-at="2020-02-17T15:22:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method signature="testArequestAPI(org.testng.ITestContext, java.util.Map)[pri:0, instance:com.ca.tds.main.TDSVerifyAPI_TC@72cde7cc]" started-at="2020-02-17T15:22:21 IST" name="testArequestAPI" data-provider="DataProvider3dsTestData" finished-at="2020-02-17T15:22:21 IST" duration-ms="2" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@77f263bb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{TestCaseID=_S001, TestCaseName=_SanityChallenge_Sample Valid Verify Request, SanityFlag=Y, Test Case type=P, RequirementID=, FieldName=, Expected-threeDSServerTransID=G, Expected-callerTxnRefID=G, Expected-eci=G, Expected-authenticationValue=G, Expected-transStatus=G, Expected-transStatusReason=G, Expected-challengeCancel=G, Expected-resultsStatus=G, Expected-authenticationType=G, Expected-interactionCounter=G, Expected-messageType=RSRs, Expected-XID=G, Expected-errorCode=NA, Expected-errorComponent=NA, Expected-errorDescription=NA, Expected-errorDetail=NA, #threeDSServerTransID#=, #callerTxnRefID#=341b7153-da86-4543-860f-2ba47f0168a5, #cres#=, #messageType#=RSRq, #caMerchantID#=MTD000000, #transStatus#=Y}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.fail(Assert.java:102)
at com.ca.tds.main.TDSVerifyAPI_TC.testArequestAPI(TDSVerifyAPI_TC.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArequestAPI -->
        <test-method is-config="true" signature="afterMethodProcessing(org.testng.ITestResult)[pri:0, instance:com.ca.tds.main.TDSVerifyAPI_TC@72cde7cc]" started-at="2020-02-17T15:22:21 IST" name="afterMethodProcessing" finished-at="2020-02-17T15:22:21 IST" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testArequestAPI status=FAILURE method=TDSVerifyAPI_TC.testArequestAPI(org.testng.ITestContext, java.util.Map)[pri:0, instance:com.ca.tds.main.TDSVerifyAPI_TC@72cde7cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodProcessing -->
        <test-method is-config="true" signature="AfterClass()[pri:0, instance:com.ca.tds.main.TDSVerifyAPI_TC@72cde7cc]" started-at="2020-02-17T15:22:21 IST" name="AfterClass" finished-at="2020-02-17T15:22:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method is-config="true" signature="AfterTestClass()[pri:0, instance:com.ca.tds.main.TDSVerifyAPI_TC@72cde7cc]" started-at="2020-02-17T15:22:21 IST" name="AfterTestClass" finished-at="2020-02-17T15:22:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestClass -->
        <test-method is-config="true" signature="endSuite()[pri:0, instance:com.ca.tds.main.TDSVerifyAPI_TC@72cde7cc]" started-at="2020-02-17T15:22:21 IST" name="endSuite" finished-at="2020-02-17T15:22:21 IST" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endSuite -->
      </class> <!-- com.ca.tds.main.TDSVerifyAPI_TC -->
    </test> <!-- AMEX::Clear Card::Browser::VerifyAPI flow -->
  </suite> <!-- SanityChallengeflow -->
  <suite started-at="2020-02-17T15:22:21 IST" name="3DSSAllFlowsPreview" finished-at="2020-02-17T15:22:21 IST" duration-ms="0">
    <groups>
    </groups>
  </suite> <!-- 3DSSAllFlowsPreview -->
</testng-results>
